{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAI/BH,EAAKC,KAAKG,iBAAiB,UAAWC,IACpCA,EAAMC,iBAEN,MAAMC,EAASC,OAAOR,EAAKC,KAAKQ,SAASF,OAAOG,OAC1CC,EAAOH,OAAOR,EAAKC,KAAKQ,SAASE,KAAKD,OAC5C,IAAIE,EAAQJ,OAAOR,EAAKC,KAAKQ,SAASI,MAAMH,OAE5C,IAAK,IAAII,EAAW,EAAGA,GAAYP,EAAQO,GAAY,EAAG,CAE1D,SAASC,EAAcC,EAAUH,GAEjC,OAAO,IAAII,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAExCC,YAAW,KACLH,EACNF,EAAS,C,SAAEF,E,MAAUH,IAErBM,EAAQ,C,SAAEH,E,MAAUH,GAAQ,GAEvBA,EAAO,G,CAZVD,GAASD,EAiBXI,EAAcD,EAAUF,GAAOY,MAAK,EAACR,SAAEA,EAAQH,MAAEA,MAC/CY,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBX,QAAiBH,MAAU,IAEzEe,OAAM,EAACZ,SAAEA,EAAQH,MAAEA,MACjBY,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBb,QAAeH,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\n  \n\nrefs.form.addEventListener('submit', (event) => {\n  event.preventDefault();\n  \n  const amount = Number(refs.form.elements.amount.value);\n  const step = Number(refs.form.elements.step.value);\n  let delay = Number(refs.form.elements.delay.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    delay += step;\n  function createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(() => {\n    if (shouldResolve) {\n  resolve ({ position, delay });\n  } else { \n  reject ({ position, delay });\n  }\n    }, delay )\n  })\n}\n  \n\n  createPromise(position, delay).then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    }\n})\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","addEventListener","event","preventDefault","amount","Number","elements","value","step","delay1","delay","position1","createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.2a062fdd.js.map"}