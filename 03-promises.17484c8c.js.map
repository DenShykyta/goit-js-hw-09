{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAI/BH,EAAKC,KAAKG,iBAAiB,UAAU,SAACC,GACpCA,EAAMC,iBAMN,IAJA,IAAMC,EAASC,OAAOR,EAAKC,KAAKQ,SAASF,OAAOG,OAC1CC,EAAOH,OAAOR,EAAKC,KAAKQ,SAASE,KAAKD,OACxCE,EAAQJ,OAAOR,EAAKC,KAAKQ,SAASI,MAAMH,OAEnCI,EAAW,EAAGA,GAAYP,EAAQO,GAAY,EAAG,CAE1D,SAASC,EAAcC,EAAUH,GAEjC,OAAO,IAAII,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAExCC,YAAW,WACLH,EACNF,EAAS,CAAEF,WAAUH,UAErBM,EAAQ,CAAEH,WAAUH,S,GAEfA,E,IAKLE,EAAcD,EAjBZF,GAASD,GAiBoBa,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUH,EAAKY,EAALZ,MAC/Ca,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAfb,EAAS,QAAYa,OAANhB,EAAM,M,IAEvEiB,OAAM,SAAAL,G,IAAGT,EAAQS,EAART,SAAUH,EAAKY,EAALZ,MACjBa,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAfb,EAAS,QAAYa,OAANhB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n}\n  \n\nrefs.form.addEventListener('submit', (event) => {\n  event.preventDefault();\n  \n  const amount = Number(refs.form.elements.amount.value);\n  const step = Number(refs.form.elements.step.value);\n  let delay = Number(refs.form.elements.delay.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    delay += step;\n  function createPromise(position, delay) {\n  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n  setTimeout(() => {\n    if (shouldResolve) {\n  resolve ({ position, delay });\n  } else { \n  reject ({ position, delay });\n  }\n    }, delay )\n  })\n}\n  \n\n  createPromise(position, delay).then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n     Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n    }\n})\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","addEventListener","event","preventDefault","amount","Number","elements","value","step","delay1","delay","position1","createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.17484c8c.js.map"}